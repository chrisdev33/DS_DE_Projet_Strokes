version: '3.5'

# Run as
# docker-compose build; docker-compose up -d
# Check with
# docker ps
# Then check the logs with
# docker logs --tail 50 $service_name
# docker-compose images
# docker-compose logs --tail 20 $service_name

services:
  strokes-db:
    image: classerredev/mysql-db-strokes:latest
    container_name: strokes-mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: data
      MYSQL_DATABASE: strokes
    networks:
      - strokes
    ports:
      - 3306:3306

  strokes-api-server:
    image: classerredev/api-strokes:latest
    container_name: strokes-api-server
    environment:
      MYSQL_HOST: strokes-db
      MYSQL_PORT: 3306
      MYSQL_DATABASE: strokes
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: data
      MYSQL_ENCRYPT_KEY: strokes
    depends_on:
      - strokes-db 
    networks:
      - strokes
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 60s
      timeout: 5s
      retries: 3

  strokes-api-test:
      image: classerredev/api-test-strokes:latest
      container_name: strokes-api-test
      volumes:
        - /c/Users/lasse/99_TMP/log:/app/test/logs
      environment:
        API_HOST: strokes-api-server
        API_PORT: 8000
      depends_on:
        - strokes-api-server
      networks:
        - strokes

networks:
  strokes:
    name: strokes
    driver: bridge